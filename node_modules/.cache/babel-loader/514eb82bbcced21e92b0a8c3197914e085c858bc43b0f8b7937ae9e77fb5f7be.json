{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Assesment/logger-dashboard/src/Component/TableHeader.js\";\nimport { TableHead, TableSortLabel } from \"@mui/material\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headCells = [{\n  id: \"logId\",\n  label: \"Log Id\"\n}, {\n  id: \"applicationId\",\n  label: \"Application Id\"\n}, {\n  id: \"applicationType\",\n  label: \"Application Type\"\n}, {\n  id: \"actionType\",\n  label: \"Action Type\"\n}, {\n  id: \"creationTimestamp\",\n  label: \"Date\"\n}];\nexport function TableHeader(props) {\n  const {\n    order,\n    orderBy,\n    onRequestSort\n  } = props;\n  const createSortHandler = property => () => {\n    onRequestSort(property);\n  };\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : \"asc\",\n          onClick: createSortHandler(headCell.id),\n          children: headCell.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = TableHeader;\nexport function getComparator(order, orderBy) {\n  return order === \"desc\" ? (a, b) => {\n    if (a[orderBy] === b[orderBy]) return 0;\n    if (b[orderBy] < a[orderBy]) return -1;\n    if (b[orderBy] > a[orderBy]) return 1;\n    return 0;\n  } : (a, b) => {\n    if (a[orderBy] === b[orderBy]) return 0;\n    if (b[orderBy] > a[orderBy]) return -1;\n    if (b[orderBy] < a[orderBy]) return 1;\n    if (a === null) return 1;\n    return 0;\n  };\n}\nexport function alphabetically(order, orderBy) {\n  return function (a, b) {\n    // equal items sort equally\n    if (a === b) {\n      return 0;\n    }\n\n    // nulls sort after anything else\n    if (a === null) {\n      return 1;\n    }\n    if (b === null) {\n      return -1;\n    }\n\n    // otherwise, if we're ascending, lowest sorts first\n    if (orderBy) {\n      return a < b ? -1 : 1;\n    }\n\n    // if descending, highest sorts first\n    return a < b ? 1 : -1;\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"TableHeader\");","map":{"version":3,"names":["TableHead","TableSortLabel","TableCell","TableRow","headCells","id","label","TableHeader","props","order","orderBy","onRequestSort","createSortHandler","property","map","headCell","getComparator","a","b","alphabetically"],"sources":["/home/neosoft/Assesment/logger-dashboard/src/Component/TableHeader.js"],"sourcesContent":["import { TableHead, TableSortLabel } from \"@mui/material\";\nimport TableCell from \"@mui/material/TableCell\";\n\nimport TableRow from \"@mui/material/TableRow\";\n\nconst headCells = [\n  {\n    id: \"logId\",\n    label: \"Log Id\",\n  },\n  {\n    id: \"applicationId\",\n    label: \"Application Id\",\n  },\n  {\n    id: \"applicationType\",\n    label: \"Application Type\",\n  },\n  {\n    id: \"actionType\",\n    label: \"Action Type\",\n  },\n  {\n    id: \"creationTimestamp\",\n    label: \"Date\",\n  },\n];\n\nexport function TableHeader(props) {\n  const { order, orderBy, onRequestSort } = props;\n\n  const createSortHandler = (property) => () => {\n    onRequestSort(property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align=\"center\"\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport function getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => {\n        if (a[orderBy] === b[orderBy]) return 0;\n        if (b[orderBy] < a[orderBy]) return -1;\n        if (b[orderBy] > a[orderBy]) return 1;\n        return 0;\n      }\n    : (a, b) => {\n        if (a[orderBy] === b[orderBy]) return 0;\n        if (b[orderBy] > a[orderBy]) return -1;\n        if (b[orderBy] < a[orderBy]) return 1;\n        if (a === null) return 1;\n        return 0;\n      };\n}\n\nexport function alphabetically(order, orderBy) {\n  return function (a, b) {\n    // equal items sort equally\n    if (a === b) {\n      return 0;\n    }\n\n    // nulls sort after anything else\n    if (a === null) {\n      return 1;\n    }\n    if (b === null) {\n      return -1;\n    }\n\n    // otherwise, if we're ascending, lowest sorts first\n    if (orderBy) {\n      return a < b ? -1 : 1;\n    }\n\n    // if descending, highest sorts first\n    return a < b ? 1 : -1;\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}